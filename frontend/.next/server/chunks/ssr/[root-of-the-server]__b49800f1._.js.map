{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/yukili/Desktop/Hackathon/ctphackathon/frontend/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,kLAAO,EAAC,IAAA,yJAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///Users/yukili/Desktop/Hackathon/ctphackathon/frontend/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,0PAAC;QACC,aAAU;QACV,WAAW,IAAA,8HAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,0PAAC;QACC,aAAU;QACV,WAAW,IAAA,8HAAE,EACX,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,0PAAC;QACC,aAAU;QACV,WAAW,IAAA,8HAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,0PAAC;QACC,aAAU;QACV,WAAW,IAAA,8HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,0PAAC;QACC,aAAU;QACV,WAAW,IAAA,8HAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,0PAAC;QACC,aAAU;QACV,WAAW,IAAA,8HAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,0PAAC;QACC,aAAU;QACV,WAAW,IAAA,8HAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///Users/yukili/Desktop/Hackathon/ctphackathon/frontend/app/components/metric-card.tsx"],"sourcesContent":["import type React from \"react\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { cn } from \"@/lib/utils\"\n\ninterface MetricCardProps {\n  title: string\n  value: number\n  unit?: string\n  status: \"low\" | \"normal\" | \"high\" | \"critical\"\n  icon?: React.ReactNode\n  className?: string\n}\n\nconst statusColors = {\n  low: \"text-chart-3\",\n  normal: \"text-chart-1\",\n  high: \"text-chart-2\",\n  critical: \"text-destructive\",\n}\n\nconst statusBgColors = {\n  low: \"bg-chart-3/10\",\n  normal: \"bg-chart-1/10\",\n  high: \"bg-chart-2/10\",\n  critical: \"bg-destructive/10\",\n}\n\nexport function MetricCard({ title, value, unit = \"%\", status, icon, className }: MetricCardProps) {\n  return (\n    <Card className={cn(\"transition-all duration-200 hover:shadow-md\", className)}>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-sm font-medium text-muted-foreground\">{title}</CardTitle>\n        {icon && <div className=\"text-muted-foreground\">{icon}</div>}\n      </CardHeader>\n      <CardContent>\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"text-2xl font-bold\">\n            {value.toFixed(1)}\n            {unit}\n          </div>\n          <div\n            className={cn(\"px-2 py-1 rounded-full text-xs font-medium\", statusColors[status], statusBgColors[status])}\n          >\n            {status.toUpperCase()}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n"],"names":[],"mappings":";;;;;AACA;AACA;;;;AAWA,MAAM,eAAe;IACnB,KAAK;IACL,QAAQ;IACR,MAAM;IACN,UAAU;AACZ;AAEA,MAAM,iBAAiB;IACrB,KAAK;IACL,QAAQ;IACR,MAAM;IACN,UAAU;AACZ;AAEO,SAAS,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,EAAmB;IAC/F,qBACE,0PAAC,6IAAI;QAAC,WAAW,IAAA,8HAAE,EAAC,+CAA+C;;0BACjE,0PAAC,mJAAU;gBAAC,WAAU;;kCACpB,0PAAC,kJAAS;wBAAC,WAAU;kCAA6C;;;;;;oBACjE,sBAAQ,0PAAC;wBAAI,WAAU;kCAAyB;;;;;;;;;;;;0BAEnD,0PAAC,oJAAW;0BACV,cAAA,0PAAC;oBAAI,WAAU;;sCACb,0PAAC;4BAAI,WAAU;;gCACZ,MAAM,OAAO,CAAC;gCACd;;;;;;;sCAEH,0PAAC;4BACC,WAAW,IAAA,8HAAE,EAAC,8CAA8C,YAAY,CAAC,OAAO,EAAE,cAAc,CAAC,OAAO;sCAEvG,OAAO,WAAW;;;;;;;;;;;;;;;;;;;;;;;AAM/B","debugId":null}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///Users/yukili/Desktop/Hackathon/ctphackathon/frontend/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,IAAA,mLAAG,EACxB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,oLAAI,GAAG;IAE9B,qBACE,0PAAC;QACC,aAAU;QACV,WAAW,IAAA,8HAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":["file:///Users/yukili/Desktop/Hackathon/ctphackathon/frontend/app/components/camera-feed.tsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useRef, useState } from \"react\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Camera, CameraOff, AlertCircle } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\n\ninterface CameraFeedProps {\n  onStreamStart?: (stream: MediaStream) => void\n  onStreamStop?: () => void\n  className?: string\n}\n\nexport function CameraFeed({ onStreamStart, onStreamStop, className }: CameraFeedProps) {\n  const videoRef = useRef<HTMLVideoElement>(null)\n  const [isStreaming, setIsStreaming] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [stream, setStream] = useState<MediaStream | null>(null)\n\n  const startCamera = async () => {\n    try {\n      setError(null)\n      const mediaStream = await navigator.mediaDevices.getUserMedia({\n        video: { width: 640, height: 540 },\n        audio: false,\n      })\n\n      if (videoRef.current) {\n        videoRef.current.srcObject = mediaStream\n      }\n\n      setStream(mediaStream)\n      setIsStreaming(true)\n      onStreamStart?.(mediaStream)\n    } catch (err) {\n      setError(\"Failed to access camera. Please check permissions.\")\n      console.error(\"Camera access error:\", err)\n    }\n  }\n\n  const stopCamera = () => {\n    if (stream) {\n      stream.getTracks().forEach((track) => track.stop())\n      setStream(null)\n    }\n\n    if (videoRef.current) {\n      videoRef.current.srcObject = null\n    }\n\n    setIsStreaming(false)\n    onStreamStop?.()\n  }\n\n  useEffect(() => {\n    return () => {\n      if (stream) {\n        stream.getTracks().forEach((track) => track.stop())\n      }\n    }\n  }, [stream])\n\n  return (\n    <Card className={cn(\"overflow-hidden\", className)}>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0\">\n        <CardTitle className=\"text-lg\">Live Camera Feed</CardTitle>\n        <Button\n          variant={isStreaming ? \"destructive\" : \"default\"}\n          size=\"sm\"\n          onClick={isStreaming ? stopCamera : startCamera}\n          className=\"flex items-center gap-2\"\n        >\n          {isStreaming ? (\n            <>\n              <CameraOff className=\"h-4 w-4\" />\n              Disconnect\n            </>\n          ) : (\n            <>\n              <Camera className=\"h-4 w-4\" />\n              Connect\n            </>\n          )}\n        </Button>\n      </CardHeader>\n      <CardContent className=\"p-0\">\n        {error ? (\n          <div className=\"flex items-center justify-center h-[300px] bg-muted\">\n            <div className=\"text-center\">\n              <AlertCircle className=\"h-8 w-8 text-destructive mx-auto mb-2\" />\n              <p className=\"text-sm text-muted-foreground\">{error}</p>\n            </div>\n          </div>\n        ) : (\n          <video ref={videoRef} autoPlay playsInline muted className=\"w-full h-[300px] object-cover bg-black\" />\n        )}\n      </CardContent>\n    </Card>\n  )\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AANA;;;;;;;AAcO,SAAS,WAAW,EAAE,aAAa,EAAE,YAAY,EAAE,SAAS,EAAmB;IACpF,MAAM,WAAW,IAAA,2NAAM,EAAmB;IAC1C,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,6NAAQ,EAAC;IAC/C,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,6NAAQ,EAAgB;IAClD,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,6NAAQ,EAAqB;IAEzD,MAAM,cAAc;QAClB,IAAI;YACF,SAAS;YACT,MAAM,cAAc,MAAM,UAAU,YAAY,CAAC,YAAY,CAAC;gBAC5D,OAAO;oBAAE,OAAO;oBAAK,QAAQ;gBAAI;gBACjC,OAAO;YACT;YAEA,IAAI,SAAS,OAAO,EAAE;gBACpB,SAAS,OAAO,CAAC,SAAS,GAAG;YAC/B;YAEA,UAAU;YACV,eAAe;YACf,gBAAgB;QAClB,EAAE,OAAO,KAAK;YACZ,SAAS;YACT,QAAQ,KAAK,CAAC,wBAAwB;QACxC;IACF;IAEA,MAAM,aAAa;QACjB,IAAI,QAAQ;YACV,OAAO,SAAS,GAAG,OAAO,CAAC,CAAC,QAAU,MAAM,IAAI;YAChD,UAAU;QACZ;QAEA,IAAI,SAAS,OAAO,EAAE;YACpB,SAAS,OAAO,CAAC,SAAS,GAAG;QAC/B;QAEA,eAAe;QACf;IACF;IAEA,IAAA,8NAAS,EAAC;QACR,OAAO;YACL,IAAI,QAAQ;gBACV,OAAO,SAAS,GAAG,OAAO,CAAC,CAAC,QAAU,MAAM,IAAI;YAClD;QACF;IACF,GAAG;QAAC;KAAO;IAEX,qBACE,0PAAC,6IAAI;QAAC,WAAW,IAAA,8HAAE,EAAC,mBAAmB;;0BACrC,0PAAC,mJAAU;gBAAC,WAAU;;kCACpB,0PAAC,kJAAS;wBAAC,WAAU;kCAAU;;;;;;kCAC/B,0PAAC,iJAAM;wBACL,SAAS,cAAc,gBAAgB;wBACvC,MAAK;wBACL,SAAS,cAAc,aAAa;wBACpC,WAAU;kCAET,4BACC;;8CACE,0PAAC,yOAAS;oCAAC,WAAU;;;;;;gCAAY;;yDAInC;;8CACE,0PAAC,4NAAM;oCAAC,WAAU;;;;;;gCAAY;;;;;;;;;;;;;;0BAMtC,0PAAC,oJAAW;gBAAC,WAAU;0BACpB,sBACC,0PAAC;oBAAI,WAAU;8BACb,cAAA,0PAAC;wBAAI,WAAU;;0CACb,0PAAC,+OAAW;gCAAC,WAAU;;;;;;0CACvB,0PAAC;gCAAE,WAAU;0CAAiC;;;;;;;;;;;;;;;;yCAIlD,0PAAC;oBAAM,KAAK;oBAAU,QAAQ;oBAAC,WAAW;oBAAC,KAAK;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAKrE","debugId":null}},
    {"offset": {"line": 457, "column": 0}, "map": {"version":3,"sources":["file:///Users/yukili/Desktop/Hackathon/ctphackathon/frontend/app/components/status-indicator.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\nimport { AlertTriangle, CheckCircle, AlertCircle, XCircle } from \"lucide-react\"\n\ninterface StatusIndicatorProps {\n  status: \"excellent\" | \"good\" | \"moderate\" | \"poor\" | \"critical\"\n  label: string\n  className?: string\n}\n\nconst statusConfig = {\n  excellent: {\n    color: \"text-chart-3\",\n    bgColor: \"bg-chart-3/10\",\n    icon: CheckCircle,\n    text: \"Excellent\",\n  },\n  good: {\n    color: \"text-chart-1\",\n    bgColor: \"bg-chart-1/10\",\n    icon: CheckCircle,\n    text: \"Good\",\n  },\n  moderate: {\n    color: \"text-chart-2\",\n    bgColor: \"bg-chart-2/10\",\n    icon: AlertCircle,\n    text: \"Moderate\",\n  },\n  poor: {\n    color: \"text-destructive\",\n    bgColor: \"bg-destructive/10\",\n    icon: AlertTriangle,\n    text: \"Poor\",\n  },\n  critical: {\n    color: \"text-destructive\",\n    bgColor: \"bg-destructive/20\",\n    icon: XCircle,\n    text: \"Critical\",\n  },\n}\n\nexport function StatusIndicator({ status, label, className }: StatusIndicatorProps) {\n  const config = statusConfig[status]\n  const Icon = config.icon\n\n  return (\n    <div\n      className={cn(\n        \"flex items-center gap-2 px-3 py-2 rounded-lg transition-all duration-200\",\n        config.bgColor,\n        className,\n      )}\n    >\n      <Icon className={cn(\"h-4 w-4\", config.color)} />\n      <div className=\"flex flex-col\">\n        <span className=\"text-xs text-muted-foreground\">{label}</span>\n        <span className={cn(\"text-sm font-medium\", config.color)}>{config.text}</span>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAAA;AAAA;AAAA;;;;AAQA,MAAM,eAAe;IACnB,WAAW;QACT,OAAO;QACP,SAAS;QACT,MAAM,sPAAW;QACjB,MAAM;IACR;IACA,MAAM;QACJ,OAAO;QACP,SAAS;QACT,MAAM,sPAAW;QACjB,MAAM;IACR;IACA,UAAU;QACR,OAAO;QACP,SAAS;QACT,MAAM,+OAAW;QACjB,MAAM;IACR;IACA,MAAM;QACJ,OAAO;QACP,SAAS;QACT,MAAM,qPAAa;QACnB,MAAM;IACR;IACA,UAAU;QACR,OAAO;QACP,SAAS;QACT,MAAM,mOAAO;QACb,MAAM;IACR;AACF;AAEO,SAAS,gBAAgB,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAwB;IAChF,MAAM,SAAS,YAAY,CAAC,OAAO;IACnC,MAAM,OAAO,OAAO,IAAI;IAExB,qBACE,0PAAC;QACC,WAAW,IAAA,8HAAE,EACX,4EACA,OAAO,OAAO,EACd;;0BAGF,0PAAC;gBAAK,WAAW,IAAA,8HAAE,EAAC,WAAW,OAAO,KAAK;;;;;;0BAC3C,0PAAC;gBAAI,WAAU;;kCACb,0PAAC;wBAAK,WAAU;kCAAiC;;;;;;kCACjD,0PAAC;wBAAK,WAAW,IAAA,8HAAE,EAAC,uBAAuB,OAAO,KAAK;kCAAI,OAAO,IAAI;;;;;;;;;;;;;;;;;;AAI9E","debugId":null}},
    {"offset": {"line": 551, "column": 0}, "map": {"version":3,"sources":["file:///Users/yukili/Desktop/Hackathon/ctphackathon/frontend/app/components/progress-bar.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\ninterface ProgressBarProps {\n  value: number\n  max?: number\n  label?: string\n  color?: \"primary\" | \"secondary\" | \"success\" | \"warning\" | \"danger\"\n  size?: \"sm\" | \"md\" | \"lg\"\n  showValue?: boolean\n  className?: string\n}\n\nconst colorClasses = {\n  primary: \"bg-chart-1\",\n  secondary: \"bg-chart-2\",\n  success: \"bg-chart-3\",\n  warning: \"bg-chart-2\",\n  danger: \"bg-destructive\",\n}\n\nconst sizeClasses = {\n  sm: \"h-2\",\n  md: \"h-3\",\n  lg: \"h-4\",\n}\n\nexport function ProgressBar({\n  value,\n  max = 100,\n  label,\n  color = \"primary\",\n  size = \"md\",\n  showValue = true,\n  className,\n}: ProgressBarProps) {\n  const percentage = Math.min((value / max) * 100, 100)\n\n  return (\n    <div className={cn(\"w-full\", className)}>\n      {(label || showValue) && (\n        <div className=\"flex justify-between items-center mb-2\">\n          {label && <span className=\"text-sm font-medium\">{label}</span>}\n          {showValue && (\n            <span className=\"text-sm text-muted-foreground\">\n              {value.toFixed(1)}/{max}\n            </span>\n          )}\n        </div>\n      )}\n      <div className={cn(\"w-full bg-muted rounded-full overflow-hidden\", sizeClasses[size])}>\n        <div\n          className={cn(\"h-full transition-all duration-300 ease-out rounded-full\", colorClasses[color])}\n          style={{ width: `${percentage}%` }}\n        />\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;AAAA;;;AAYA,MAAM,eAAe;IACnB,SAAS;IACT,WAAW;IACX,SAAS;IACT,SAAS;IACT,QAAQ;AACV;AAEA,MAAM,cAAc;IAClB,IAAI;IACJ,IAAI;IACJ,IAAI;AACN;AAEO,SAAS,YAAY,EAC1B,KAAK,EACL,MAAM,GAAG,EACT,KAAK,EACL,QAAQ,SAAS,EACjB,OAAO,IAAI,EACX,YAAY,IAAI,EAChB,SAAS,EACQ;IACjB,MAAM,aAAa,KAAK,GAAG,CAAC,AAAC,QAAQ,MAAO,KAAK;IAEjD,qBACE,0PAAC;QAAI,WAAW,IAAA,8HAAE,EAAC,UAAU;;YAC1B,CAAC,SAAS,SAAS,mBAClB,0PAAC;gBAAI,WAAU;;oBACZ,uBAAS,0PAAC;wBAAK,WAAU;kCAAuB;;;;;;oBAChD,2BACC,0PAAC;wBAAK,WAAU;;4BACb,MAAM,OAAO,CAAC;4BAAG;4BAAE;;;;;;;;;;;;;0BAK5B,0PAAC;gBAAI,WAAW,IAAA,8HAAE,EAAC,gDAAgD,WAAW,CAAC,KAAK;0BAClF,cAAA,0PAAC;oBACC,WAAW,IAAA,8HAAE,EAAC,4DAA4D,YAAY,CAAC,MAAM;oBAC7F,OAAO;wBAAE,OAAO,GAAG,WAAW,CAAC,CAAC;oBAAC;;;;;;;;;;;;;;;;;AAK3C","debugId":null}},
    {"offset": {"line": 633, "column": 0}, "map": {"version":3,"sources":["file:///Users/yukili/Desktop/Hackathon/ctphackathon/frontend/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,IAAA,mLAAG,EACvB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,oLAAI,GAAG;IAE9B,qBACE,0PAAC;QACC,aAAU;QACV,WAAW,IAAA,8HAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 679, "column": 0}, "map": {"version":3,"sources":["file:///Users/yukili/Desktop/Hackathon/ctphackathon/frontend/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { MetricCard } from \"./components/metric-card\"\nimport { LiveChart } from \"./components/live-chart\"\nimport { CameraFeed } from \"./components/camera-feed\"\nimport { StatusIndicator } from \"./components/status-indicator\"\nimport { ProgressBar } from \"./components/progress-bar\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Heart, Brain, Zap, Activity, Play, Pause, RotateCcw } from \"lucide-react\"\n\n// Mock data generation for demonstration\nconst generateMockData = () => ({\n  stressLevel: Math.random() * 100,\n  breathingRate: 12 + Math.random() * 8,\n  confidenceLevel: 70 + Math.random() * 30,\n  heartRate: 60 + Math.random() * 40,\n})\n\nexport default function StressDashboard() {\n  const [isMonitoring, setIsMonitoring] = useState(false)\n  const [currentMetrics, setCurrentMetrics] = useState(generateMockData())\n  // const [chartData, setChartData] = useState({\n  //   stress: [] as Array<{ time: string; value: number }>,\n  //   breathing: [] as Array<{ time: string; value: number }>,\n  //   confidence: [] as Array<{ time: string; value: number }>,\n  // })\n\n  // Simulate real-time data updates\n  useEffect(() => {\n    if (!isMonitoring) return\n\n    const interval = setInterval(() => {\n      const newMetrics = generateMockData()\n      setCurrentMetrics(newMetrics)\n\n      const currentTime = new Date().toLocaleTimeString()\n\n      // setChartData((prev) => ({\n      //   stress: [...prev.stress.slice(-19), { time: currentTime, value: newMetrics.stressLevel }],\n      //   breathing: [...prev.breathing.slice(-19), { time: currentTime, value: newMetrics.breathingRate }],\n      //   confidence: [...prev.confidence.slice(-19), { time: currentTime, value: newMetrics.confidenceLevel }],\n      // }))\n    }, 2000)\n\n    return () => clearInterval(interval)\n  }, [isMonitoring])\n\n  const getStressStatus = (level: number) => {\n    if (level < 20) return \"excellent\"\n    if (level < 40) return \"good\"\n    if (level < 60) return \"moderate\"\n    if (level < 80) return \"poor\"\n    return \"critical\"\n  }\n\n  const getBreathingStatus = (rate: number) => {\n    if (rate >= 12 && rate <= 16) return \"excellent\"\n    if (rate >= 10 && rate <= 18) return \"good\"\n    if (rate >= 8 && rate <= 20) return \"moderate\"\n    return \"poor\"\n  }\n\n  const handleStartMonitoring = () => {\n    setIsMonitoring(true)\n    // Initialize with some data points\n    const initialTime = new Date().toLocaleTimeString()\n    const initialMetrics = generateMockData()\n    // setChartData({\n    //   stress: [{ time: initialTime, value: initialMetrics.stressLevel }],\n    //   breathing: [{ time: initialTime, value: initialMetrics.breathingRate }],\n    //   confidence: [{ time: initialTime, value: initialMetrics.confidenceLevel }],\n    // })\n  }\n\n  const handleStopMonitoring = () => {\n    setIsMonitoring(false)\n  }\n\n  const handleReset = () => {\n    setIsMonitoring(false)\n    // setChartData({ stress: [], breathing: [], confidence: [] })\n    setCurrentMetrics(generateMockData())\n  }\n\n  return (\n    <div className=\"min-h-screen bg-background p-10 space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-foreground\">Stress & Anxiety Monitor</h1>\n          <p className=\"text-muted-foreground\">Real-time biometric analysis dashboard</p>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <Badge variant={isMonitoring ? \"default\" : \"secondary\"} className=\"px-3 py-1\">\n            {isMonitoring ? \"MONITORING\" : \"STANDBY\"}\n          </Badge>\n        </div>\n      </div>\n\n      {/* Control Panel */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Activity className=\"h-5 w-5\" />\n            Control Panel\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"flex items-center gap-4\">\n          <Button\n            onClick={isMonitoring ? handleStopMonitoring : handleStartMonitoring}\n            variant={isMonitoring ? \"destructive\" : \"default\"}\n            className=\"flex items-center gap-2\"\n          >\n            {isMonitoring ? (\n              <>\n                <Pause className=\"h-4 w-4\" />\n                Stop Monitoring\n              </>\n            ) : (\n              <>\n                <Play className=\"h-4 w-4\" />\n                Start Monitoring\n              </>\n            )}\n          </Button>\n          <Button onClick={handleReset} variant=\"outline\" className=\"flex items-center gap-2 bg-transparent\">\n            <RotateCcw className=\"h-4 w-4\" />\n            Reset\n          </Button>\n        </CardContent>\n      </Card>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Camera Feed */}\n        <div className=\"lg:col-span-1\">\n          <CameraFeed />\n        </div>\n\n        {/* Metrics Cards */}\n        <div className=\"lg:col-span-2 space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <MetricCard\n              title=\"Stress Level\"\n              value={currentMetrics.stressLevel}\n              status={\n                currentMetrics.stressLevel < 30\n                  ? \"low\"\n                  : currentMetrics.stressLevel < 60\n                    ? \"normal\"\n                    : currentMetrics.stressLevel < 80\n                      ? \"high\"\n                      : \"critical\"\n              }\n              icon={<Brain className=\"h-4 w-4\" />}\n            />\n            <MetricCard\n              title=\"Breathing Rate\"\n              value={currentMetrics.breathingRate}\n              unit=\" bpm\"\n              status={currentMetrics.breathingRate >= 12 && currentMetrics.breathingRate <= 16 ? \"normal\" : \"high\"}\n              icon={<Activity className=\"h-4 w-4\" />}\n            />\n            <MetricCard\n              title=\"Confidence Level\"\n              value={currentMetrics.confidenceLevel}\n              status={currentMetrics.confidenceLevel > 80 ? \"normal\" : \"low\"}\n              icon={<Zap className=\"h-4 w-4\" />}\n            />\n            <MetricCard\n              title=\"Heart Rate\"\n              value={currentMetrics.heartRate}\n              unit=\" bpm\"\n              status={currentMetrics.heartRate >= 60 && currentMetrics.heartRate <= 80 ? \"normal\" : \"high\"}\n              icon={<Heart className=\"h-4 w-4\" />}\n            />\n          </div>\n\n          {/* Status Indicators */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Overall Status</CardTitle>\n            </CardHeader>\n            <CardContent className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <StatusIndicator status={getStressStatus(currentMetrics.stressLevel)} label=\"Stress Level\" />\n              <StatusIndicator status={getBreathingStatus(currentMetrics.breathingRate)} label=\"Breathing Pattern\" />\n              <StatusIndicator\n                status={\n                  currentMetrics.confidenceLevel > 80\n                    ? \"excellent\"\n                    : currentMetrics.confidenceLevel > 60\n                      ? \"good\"\n                      : \"moderate\"\n                }\n                label=\"Analysis Confidence\"\n              />\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n\n      {/* Live Charts\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <LiveChart title=\"Stress Level Trend\" data={chartData.stress} color=\"chart-1\" yAxisDomain={[0, 100]} />\n        <LiveChart title=\"Breathing Rate\" data={chartData.breathing} color=\"chart-2\" yAxisDomain={[8, 24]} />\n        <LiveChart title=\"Confidence Level\" data={chartData.confidence} color=\"chart-3\" yAxisDomain={[0, 100]} />\n      </div> */}\n\n      {/* Progress Bars Section */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Detailed Metrics</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <ProgressBar\n            label=\"Stress Level\"\n            value={currentMetrics.stressLevel}\n            color={currentMetrics.stressLevel < 50 ? \"success\" : currentMetrics.stressLevel < 75 ? \"warning\" : \"danger\"}\n          />\n          <ProgressBar\n            label=\"Breathing Stability\"\n            value={Math.max(0, 100 - Math.abs(currentMetrics.breathingRate - 14) * 10)}\n            color=\"primary\"\n          />\n          <ProgressBar label=\"Analysis Confidence\" value={currentMetrics.confidenceLevel} color=\"secondary\" />\n        </CardContent>\n      </Card>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}